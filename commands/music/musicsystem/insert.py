from utils.database import get_embed_color
from asyncio.log import logger
import yt_dlp as youtube_dl
from yt_dlp import YoutubeDL
import discord

async def insert_music(ctx, query, music_manager, ydl_opts):
    """
    Adiciona uma m√∫sica ou o primeiro item de uma playlist √† fila de reprodu√ß√£o.

    :param ctx: Contexto do comando.
    :param query: Nome ou URL da m√∫sica/playlist.
    :param music_manager: Gerenciador de m√∫sicas.
    :param ydl_opts: Op√ß√µes do YoutubeDL.
    """
    try:
        with YoutubeDL(ydl_opts) as ydl:
            # Extrai informa√ß√µes da m√∫sica ou da playlist
            info = ydl.extract_info(query, download=False)
            if 'entries' in info:  # Se for uma playlist, pega a primeira m√∫sica
                info = info['entries'][0]

            # Dados da m√∫sica
            song = {
                'title': info.get('title', 'Desconhecido'),
                'stream_url': info.get('url'),
                'duration': info.get('duration', 0),
                'uploader': info.get('uploader', 'Desconhecido'),
                'url': info.get('webpage_url', 'URL n√£o dispon√≠vel'),
                'thumbnail': info.get('thumbnail'),
                'added_by': ctx.author.display_name,
                'channel': ctx.author.voice.channel.name
            }

        # Verifica se o URL de stream foi obtido
        if not song['stream_url']:
            raise ValueError("URL de stream n√£o encontrada para a m√∫sica.")

        # Adiciona a m√∫sica √† fila
        music_manager.add_to_queue(song)

        # Feedback ao usu√°rio
        await ctx.send(embed=music_manager.create_embed(
            "üéµ M√∫sica Adicionada √† Fila",
            f"**T√≠tulo:** {song['title']}\n"
            f"**Dura√ß√£o:** {song['duration'] // 60}:{str(song['duration'] % 60).zfill(2)}\n"
            f"**Adicionado por:** {ctx.author.mention}",
            get_embed_color()
        ))

        # Log para depura√ß√£o
        logger.info(f"M√∫sica adicionada √† fila: {song['title']}")

    except youtube_dl.DownloadError as e:
        logger.error(f"Erro ao processar o download da m√∫sica: {e}")
        await ctx.send(embed=music_manager.create_embed(
            "Erro",
            "‚ö†Ô∏è N√£o foi poss√≠vel processar a m√∫sica devido a um erro de download.",
            get_embed_color()
        ))

    except Exception as e:
        logger.error(f"Erro ao inserir m√∫sica: {e}")
        await ctx.send(embed=music_manager.create_embed(
            "Erro",
            "‚ö†Ô∏è Ocorreu um erro inesperado ao adicionar a m√∫sica √† fila.",
            get_embed_color()
        ))
